import 'dart:async';
import 'package:flutter/material.dart';
import 'package:project_ltc/components/progress_tracker.dart';

class HomeScreenPage extends StatefulWidget {
  @override
  _HomeScreenPageState createState() => _HomeScreenPageState();
}

class _HomeScreenPageState extends State<HomeScreenPage> {
  late TextEditingController _greetingController;
  late TextEditingController _readyToLearnController;
  late PageController _pageController;
  late Timer _timer;

  List<String> cppTips = [
    "Always free dynamically allocated memory to avoid memory leaks.",
    "Initialize variables before using them.",
    "Use the 'auto' keyword when appropriate in C++11 and later.",
    "Remember that C++ starts array indices at 0, not 1.",
    "Prefer std::vector over plain arrays for dynamic collections."
  ];

  @override
  void initState() {
    super.initState();
    _greetingController = TextEditingController();
    _readyToLearnController = TextEditingController();
    _pageController = PageController();
    WidgetsBinding.instance.addPostFrameCallback((_) async {
      await _typewriterEffect(getTimeBasedGreeting(), _greetingController);
      await _typewriterEffect(
          "Ready to learn C++ today?", _readyToLearnController);
    });
    _timer = Timer.periodic(Duration(seconds: 5), (Timer timer) {
      if (_pageController.page == cppTips.length - 1) {
        _pageController.animateToPage(
          0,
          duration: const Duration(milliseconds: 400),
          curve: Curves.easeInOut,
        );
      } else {
        _pageController.nextPage(
          duration: const Duration(milliseconds: 400),
          curve: Curves.easeInOut,
        );
      }
    });
  }

  Future<void> _typewriterEffect(
      String text, TextEditingController controller) async {
    for (int i = 0; i < text.length; i++) {
      await Future.delayed(Duration(milliseconds: 60)); // Adjust speed here
      setState(() {
        controller.text = text.substring(0, i + 1);
      });
    }
    return Future.delayed(Duration(milliseconds: 500));
  }

  String getTimeBasedGreeting() {
    final hour = DateTime.now().hour;
    if (hour < 12) {
      return 'Good Morning';
    }
    if (hour < 17) {
      return 'Good Afternoon';
    }
    return 'Good Evening';
  }

  @override
  void dispose() {
    _greetingController.dispose();
    _readyToLearnController.dispose();
    _pageController.dispose();
    _timer.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);

    return Scaffold(
      backgroundColor: theme.colorScheme.background,
      body: CustomScrollView(
        slivers: [
          SliverAppBar(
            backgroundColor: theme.primaryColor,
            expandedHeight: 200.0,
            pinned: true,
            elevation: 10.0,
            shape: const ContinuousRectangleBorder(
              borderRadius: BorderRadius.only(
                bottomLeft: Radius.circular(30),
                bottomRight: Radius.circular(30),
              ),
            ),
            leading: IconButton(
              icon: Icon(Icons.code, color: theme.iconTheme.color),
              onPressed: () {},
            ),
            flexibleSpace: FlexibleSpaceBar(
              centerTitle: true,
              titlePadding: const EdgeInsets.all(16.0),
              title: Text(
                "Learn to Code",
                style: TextStyle(
                  fontSize: 20,
                  color: theme.textTheme.bodyMedium!.color,
                  shadows: [
                    Shadow(
                      color: theme.colorScheme.onPrimary,
                      blurRadius: 5.0,
                      offset: const Offset(1.5, 1.5),
                    ),
                  ],
                ),
              ),
            ),
            actions: [
              IconButton(
                icon: Icon(Icons.notifications, color: theme.iconTheme.color),
                onPressed: () {},
              ),
              SizedBox(width: 16),
            ],
          ),
          SliverPadding(
            padding: const EdgeInsets.symmetric(horizontal: 16.0),
            sliver: SliverList(
              delegate: SliverChildListDelegate(
                [
                  // Greeting with typewriter effect
                  TextField(
                    controller: _greetingController,
                    readOnly: true,
                    maxLines: 1,
                    style: TextStyle(
                      fontSize: 28,
                      fontWeight: FontWeight.bold,
                      color: theme.textTheme.bodyLarge!.color,
                    ),
                    decoration: InputDecoration(
                      border: InputBorder.none,
                    ),
                  ),
                  TextField(
                    controller: _readyToLearnController,
                    readOnly: true,
                    maxLines: 1,
                    style: TextStyle(
                      fontSize: 21,
                      color: theme.textTheme.titleMedium!.color,
                    ),
                    decoration: InputDecoration(
                      border: InputBorder.none,
                    ),
                  ),

                  const SizedBox(height: 20,),
                  //progress tracker
                  ProgressTracker(currentLevel: 5, maxLevel: 10),

                  SizedBox(height: 25), // Enhanced spacing

                  // Continue Your Journey
                  Padding(
                    padding: const EdgeInsets.symmetric(horizontal: 16.0),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Text(
                          "Continue Your Journey",
                          style: TextStyle(
                            fontSize: 24,
                            fontWeight: FontWeight.bold,
                            color: theme.textTheme.bodyLarge!.color,
                          ),
                        ),
                        Icon(Icons.arrow_forward_ios,
                            color: theme.iconTheme.color, size: 20),
                      ],
                    ),
                  ),
                  SizedBox(height: 10),
                  Container(
                    padding: const EdgeInsets.symmetric(
                        horizontal: 20.0, vertical: 16.0),
                    decoration: BoxDecoration(
                      color: theme.cardColor,
                      borderRadius: BorderRadius.circular(20.0),
                      boxShadow: [
                        BoxShadow(
                          color: theme.iconTheme.color!.withOpacity(0.15),
                          blurRadius: 8,
                          offset: Offset(4, 4),
                        ),
                      ],
                    ),
                    child: Column(
                      children: [
                        Text(
                          "You stopped at 'Variables in C++'.",
                          style: TextStyle(
                            fontSize: 19,
                            fontWeight: FontWeight.w600,
                            color: theme.textTheme.titleMedium!.color,
                          ),
                        ),
                        SizedBox(height: 15),
                        LinearProgressIndicator(
                          value: 0.5,
                          backgroundColor:
                              theme.colorScheme.secondary.withOpacity(0.3),
                          valueColor: AlwaysStoppedAnimation(
                              theme.colorScheme.secondary),
                        ),
                        SizedBox(height: 10),
                        Text(
                          "50% Completed",
                          style: TextStyle(
                            fontSize: 17,
                            color: theme.textTheme.titleSmall!.color,
                          ),
                        ),
                        SizedBox(height: 15),
                        ElevatedButton(
                          style: ElevatedButton.styleFrom(
                            primary: theme.colorScheme.secondary,
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(15),
                            ),
                            padding: EdgeInsets.symmetric(
                                horizontal: 40, vertical: 12),
                          ),
                          onPressed: () {},
                          child: Text(
                            "Resume Learning",
                            style: TextStyle(
                              fontSize: 19,
                              color: theme.textTheme.bodyMedium!.color,
                            ),
                          ),
                        ),
                      ],
                    ),
                  ),
                  SizedBox(height: 25),

                  // C++ Tips with sliding animation
                  Container(
                    height: 190, // Slightly bigger height
                    child: PageView.builder(
                      controller: _pageController,
                      itemCount: cppTips.length,
                      itemBuilder: (context, index) {
                        return Container(
                          margin: const EdgeInsets.symmetric(
                              vertical: 20.0, horizontal: 5.0),
                          padding: const EdgeInsets.all(20.0),
                          decoration: BoxDecoration(
                            color: theme.cardColor,
                            borderRadius: BorderRadius.only(
                              topLeft: Radius.circular(20.0),
                              bottomRight: Radius.circular(20.0),
                            ),
                            boxShadow: [
                              BoxShadow(
                                color: theme.iconTheme.color!.withOpacity(0.15),
                                blurRadius: 6,
                                offset: Offset(3, 3),
                              ),
                            ],
                          ),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Row(
                                children: [
                                  Icon(Icons.lightbulb_outline,
                                      size: 32, color: theme.iconTheme.color),
                                  SizedBox(width: 12),
                                  Expanded(
                                    child: Text(
                                      "C++ Tip of the day",
                                      style: TextStyle(
                                        fontSize: 22,
                                        fontWeight: FontWeight.bold,
                                        color:
                                            theme.textTheme.bodyMedium!.color,
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Divider(
                                color: theme.dividerColor.withOpacity(0.7),
                                thickness: 1.5,
                                height: 20,
                                indent: 40,
                                endIndent: 10,
                              ),
                              Flexible(
                                child: Text(
                                  cppTips[index],
                                  textAlign: TextAlign.start,
                                  style: TextStyle(
                                    fontSize: 19,
                                    color: theme.textTheme.titleMedium!.color,
                                  ),
                                ),
                              ),
                            ],
                          ),
                        );
                      },
                    ),
                  ),

                  SizedBox(height: 200),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}
